---
- name: sysctl fs.protected_regular
  ansible.builtin.sysctl:
    name: fs.protected_regular
    value: 0
    state: present
    reload: true

- name: run cluster setup
  ansible.builtin.command: minikube start --driver=docker --container-runtime=docker --force
  register: mk_start
  changed_when: "'Done!' in mk_start.stdout"
  failed_when: mk_start.rc != 0
  when: first_start

- name: get minikube status
  ansible.builtin.command: minikube status --output=json
  register: mk_status
  changed_when: false
  failed_when: false

- name: abort if not clustering
  ansible.builtin.fail:
    msg: "Something wrong with the cluster?"
  when: >
    mk_status.rc != 0 or
    (mk_status.stdout | from_json).Host    != "Running" or
    (mk_status.stdout | from_json).Kubelet != "Running"

- name: install python kubernetes client
  become: true
  ansible.builtin.apt:
    name: python3-kubernetes
    state: present

- name: aws creds secret
  kubernetes.core.k8s:
    kubeconfig: "{{ lfk_s3_kubeconfig }}"
    namespace: default
    state: present
    definition: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: aws-creds
      type: Opaque
      data:
        access_key_id: "{{ lfk_s3_aws_access_key | b64encode }}"
        secret_access_key: "{{ lfk_s3_aws_secret_key | b64encode }}"

- name: deploy!
  kubernetes.core.k8s:
    kubeconfig: "{{ lfk_s3_kubeconfig }}"
    namespace: default
    state: present
    definition: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: s3-frontend-deployment
      spec:
        replicas: 1
        selector:
          matchLabels: { app: s3-frontend }
        template:
          metadata: { labels: { app: s3-frontend } }
          spec:
            containers:
            - name: s3-frontend
              image: s3_frontend:{{lfk_s3_frontend_docker_tag | default('dev') }}
              imagePullPolicy: Never
              ports:
              - containerPort: 5000
              env:
              - name: S3_BUCKET
                value: "{{ lfk_s3_bucket_name }}"
              - name: AWS_DEFAULT_REGION
                value: "{{ lfk_s3_bucket_region }}"
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: aws-creds
                    key: access_key_id
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: aws-creds
                    key: secret_access_key

- name: expose
  kubernetes.core.k8s:
    kubeconfig: "{{ lfk_s3_kubeconfig }}"
    state: present
    namespace: default
    definition: |
      apiVersion: v1
      kind: Service
      metadata:
        name: s3-frontend
      spec:
        type: NodePort
        selector:
          app: s3-frontend
        ports:
        - port: 80
          targetPort: 5000
          nodePort: {{ lfk_s3_frontend_nodeport | default(30001) }}
